{"version":3,"sources":["assets/noPosterSmall.png","api.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Components/Section.js","Route/Home/HomePresenter.js","Route/Home/index.js","Route/Home/HomeContainer.js","Route/Search/SearchPresenter.js","Route/Search/index.js","Route/Search/SearchContainer.js","Route/TV/TVPresenter.js","Route/TV/index.js","Route/TV/TVContainer.js","Route/Detail/DetailPresenter.js","Route/Detail/index.js","Route/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Loader","role","aria-label","Text","span","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Title","Year","Poster","imageUrl","title","rating","year","isMovie","to","require","default","length","substring","Grid","Section","children","HomePresenter","nowPlaying","popular","upcoming","error","loading","Helmet","map","movie","poster_path","original_title","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","original_name","first_air_date","propsTypes","PropTypes","array","string","bool","isRequired","func","SearchContainer","event","preventDefault","searchByTerm","target","TVPresenter","topRated","airingToday","TVContainer","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overviiew","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","pathname","location","includes","match","push","history","parseId","parseInt","isNaN","SHeader","header","List","ul","li","currunt","SLink","Link","withRouter","console","log","Rtr","path","exact","component","Home","TV","Search","Detail","from","GlobalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGAAA,OAAe,cAA0B,2C,4LCEnCA,E,OAAMC,EAAMC,OAAO,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,EACC,kBAAMP,EAAIQ,IAAI,sBADfD,EAED,kBAAMP,EAAIQ,IAAI,mBAFbD,EAGF,kBAAMP,EAAIQ,IAAI,kBAHZD,EAIE,SAACE,GAAD,OACXT,EAAIQ,IAAJ,gBAAiBC,GAAM,CACrBL,OAAQ,CAAEM,mBAAoB,aANvBH,EAQH,SAACI,GAAD,OACNX,EAAIQ,IAAI,eAAgB,CACtBJ,OAAQ,CAAEQ,MAAOC,mBAAmBF,OAI7BG,EACD,kBAAMd,EAAIQ,IAAI,iBADbM,EAEF,kBAAMd,EAAIQ,IAAI,eAFZM,EAGE,kBAAMd,EAAIQ,IAAI,oBAHhBM,EAIC,SAACL,GAAD,OACVT,EAAIQ,IAAJ,aAAcC,GAAM,CAClBL,OAAQ,CAAEM,mBAAoB,aANvBI,EAQH,SAACH,GAAD,OACNX,EAAIQ,IAAI,YAAa,CACnBJ,OAAQ,CAAEQ,MAAOC,mBAAmBF,O,qBChCpCI,EAAYC,IAAOC,IAAV,sJAiBAC,EARA,kBACb,cAACH,EAAD,UACE,sBAAMI,KAAK,MAAMC,aAAW,UAA5B,uBCVEL,EAAYC,IAAOC,IAAV,2FAMTI,EAAOL,IAAOM,KAAV,2CACC,SAACC,GAAD,OAAWA,EAAMC,SAcbC,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMF,EAAT,EAASA,MAAT,OACd,cAAC,EAAD,UACE,cAACH,EAAD,CAAMG,MAAOA,EAAb,SAAqBE,OCXnBX,EAAYC,IAAOC,IAAV,gDAITU,EAAQX,IAAOC,IAAV,0MACe,SAACM,GAAD,OAAWA,EAAMK,SAQrCC,GAASb,IAAOM,KAAV,qIAQNQ,GAAiBd,IAAOC,IAAV,uKAIdU,EAGAE,IAMAE,GAAQf,IAAOM,KAAV,sEAKLU,GAAOhB,IAAOM,KAAV,mFAsCKW,GAjCA,SAAC,GAAD,IAAGxB,EAAH,EAAGA,GAAIyB,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,KAAhC,IAAsCC,eAAtC,gBACb,cAAC,IAAD,CAAMC,GAAID,EAAO,iBAAa7B,GAAb,gBAA6BA,GAA9C,SACE,eAAC,EAAD,WACE,eAACqB,GAAD,WACE,cAACH,EAAD,CACEC,MACEM,EAAQ,yCAC8BA,GAClCM,EAAQ,IAA4BC,UAG5C,eAACZ,GAAD,WACE,sBAAMV,KAAK,MAAX,oBACCiB,EAFH,YAKF,cAACL,GAAD,UACGI,EAAMO,OAAS,GAAf,UAAuBP,EAAMQ,UAAU,EAAG,IAA1C,OAAqDR,IAExD,cAACH,GAAD,UAAOK,UChEPtB,GAAYC,IAAOC,IAAV,kFAMTc,GAAQf,IAAOM,KAAV,qEAKLsB,GAAO5B,IAAOC,IAAV,0IAsBK4B,GAfC,SAAC,GAAD,IAAGV,EAAH,EAAGA,MAAOW,EAAV,EAAUA,SAAV,OACd,eAAC,GAAD,WACE,cAAC,GAAD,UAAQX,IACR,cAACS,GAAD,UAAOE,Q,SChBL/B,GAAYC,IAAOC,IAAV,8CAwEA8B,GApEO,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,SAAUC,EAAlC,EAAkCA,MAAOC,EAAzC,EAAyCA,QAAzC,OACpB,qCACE,cAACC,GAAA,EAAD,UACE,uDAEDD,EACC,cAAC,EAAD,IAEA,eAAC,GAAD,WACGJ,GAAcA,EAAWN,OAAS,GACjC,cAAC,GAAD,CAASP,MAAM,cAAf,SACGa,EAAWM,KAAI,SAACC,GAAD,OACd,cAAC,GAAD,CAEE9C,GAAI8C,EAAM9C,GACVyB,SAAUqB,EAAMC,YAChBrB,MAAOoB,EAAME,eACbrB,OAAQmB,EAAMG,aACdrB,KAAMkB,EAAMI,cAAgBJ,EAAMI,aAAahB,UAAU,EAAG,GAC5DL,SAAS,GANJiB,EAAM9C,SAWlByC,GAAYA,EAASR,OAAS,GAC7B,cAAC,GAAD,CAASP,MAAM,iBAAf,SACGe,EAASI,KAAI,SAACC,GAAD,OACZ,cAAC,GAAD,CAEE9C,GAAI8C,EAAM9C,GACVyB,SAAUqB,EAAMC,YAChBrB,MAAOoB,EAAME,eACbrB,OAAQmB,EAAMG,aACdrB,KAAMkB,EAAMI,aACZrB,SAAS,GANJiB,EAAM9C,SAWlBwC,GAAWA,EAAQP,OAAS,GAC3B,cAAC,GAAD,CAASP,MAAM,gBAAf,SACGc,EAAQK,KAAI,SAACC,GAAD,OACX,cAAC,GAAD,CAEE9C,GAAI8C,EAAM9C,GACVyB,SAAUqB,EAAMC,YAChBrB,MAAOoB,EAAME,eACbrB,OAAQmB,EAAMG,aACdrB,KAAMkB,EAAMI,aACZrB,SAAS,GANJiB,EAAM9C,SAWlB0C,GAAS,cAAC,EAAD,CAASA,MAAM,UAAUzB,KAAMyB,WChElCS,G,4MCGbC,MAAQ,CACNb,WAAY,KACZE,SAAU,KACVD,QAAS,KACTE,MAAO,KACPC,SAAS,G,8FAGX,sCAAAU,EAAA,+EAIcvD,IAJd,uBAGuByC,EAHvB,EAGMe,KAAQC,QAHd,SAOczD,IAPd,uBAMuB2C,EANvB,EAMMa,KAAQC,QANd,UAUczD,IAVd,iBASuB0C,EATvB,EASMc,KAAQC,QAEVC,KAAKC,SAAS,CACZlB,aACAE,WACAD,YAdN,kDAiBIgB,KAAKC,SAAS,CACZf,MAAO,kCAlBb,yBAqBIc,KAAKC,SAAS,CACZd,SAAS,IAtBf,6E,0EA2BA,WACE,MAA0Da,KAAKJ,MAAvDb,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,SAAUD,EAA9B,EAA8BA,QAASE,EAAvC,EAAuCA,MAAOC,EAA9C,EAA8CA,QAC9C,OACE,cAAC,GAAD,CACEJ,WAAYA,EACZE,SAAUA,EACVD,QAASA,EACTE,MAAOA,EACPC,QAASA,Q,GA5CWe,IAAMC,W,mBCI5BrD,GAAYC,IAAOC,IAAV,kDAIToD,GAAOrD,IAAOsD,KAAV,oEAKJC,GAAQvD,IAAOwD,MAAV,+EAMLC,GAAkB,SAAC,GAAD,IACtBC,EADsB,EACtBA,aACAC,EAFsB,EAEtBA,UACAvB,EAHsB,EAGtBA,QACAwB,EAJsB,EAItBA,WACAC,EALsB,EAKtBA,aACA1B,EANsB,EAMtBA,MACA2B,EAPsB,EAOtBA,WAPsB,OAStB,eAAC,GAAD,WACE,cAACzB,GAAA,EAAD,UACE,uDAEF,cAACgB,GAAD,CAAMU,SAAUF,EAAhB,SACE,cAACN,GAAD,CACES,YAAY,8BACZC,MAAOL,EACPM,SAAUJ,MAGb1B,EACC,cAAC,EAAD,IAEA,qCACGsB,GAAgBA,EAAahC,OAAS,GACrC,cAAC,GAAD,CAASP,MAAM,gBAAf,SACGuC,EAAapB,KAAI,SAACC,GAAD,OAChB,cAAC,GAAD,CAEE9C,GAAI8C,EAAM9C,GACVyB,SAAUqB,EAAMC,YAChBrB,MAAOoB,EAAME,eACbrB,OAAQmB,EAAMG,aACdrB,KAAMkB,EAAMI,cAAgBJ,EAAMI,aAAahB,UAAU,EAAG,GAC5DL,SAAS,GANJiB,EAAM9C,SAWlBkE,GAAaA,EAAUjC,OAAS,GAC/B,cAAC,GAAD,CAASP,MAAM,kBAAf,SACGwC,EAAUrB,KAAI,SAAC6B,GAAD,OACb,cAAC,GAAD,CAEE1E,GAAI0E,EAAK1E,GACTyB,SAAUiD,EAAK3B,YACfrB,MAAOgD,EAAKC,cACZhD,OAAQ+C,EAAKzB,aACbrB,KACE8C,EAAKE,gBAAkBF,EAAKE,eAAe1C,UAAU,EAAG,IANrDwC,EAAK1E,SAYjB0C,GAAS,cAAC,EAAD,CAASA,MAAM,UAAUzB,KAAMyB,IACxCwB,GACCD,GACqB,IAArBC,EAAUjC,QACc,IAAxBgC,EAAahC,QACX,cAAC,EAAD,CAAShB,KAAK,gBAAgBF,MAAM,mBAOhDiD,GAAgBa,WAAa,CAC3BZ,aAAca,KAAUC,MACxBb,UAAWY,KAAUC,MACrBrC,MAAOoC,KAAUE,OACjBb,WAAYW,KAAUC,MACtBpC,QAASmC,KAAUG,KAAKC,WACxBd,aAAcU,KAAUK,KAAKD,WAC7Bb,WAAYS,KAAUK,KAAKD,YAGdlB,I,gDAAAA,MClGAoB,G,4MCGbhC,MAAQ,CACNa,aAAc,KACdC,UAAW,KACXC,WAAY,GACZxB,SAAS,EACTD,MAAO,M,EAGT0B,aAAe,SAACiB,GACdA,EAAMC,iBAEa,KADI,EAAKlC,MAApBe,YAEN,EAAKoB,gB,EAITlB,WAAa,SAACgB,GACZ,IACYb,EACRa,EADFG,OAAUhB,MAEZ,EAAKf,SAAS,CACZU,WAAYK,K,EAIhBe,a,sBAAe,oCAAAlC,EAAA,6DACLc,EAAe,EAAKf,MAApBe,WACR,EAAKV,SAAS,CAAEd,SAAS,IAFZ,kBAMD7C,EAAiBqE,GANhB,uBAKQF,EALR,EAKTX,KAAQC,QALC,SASDlD,EAAa8D,GATZ,gBAQQD,EARR,EAQTZ,KAAQC,QAEV,EAAKE,SAAS,CAAEQ,eAAcC,cAVnB,kDAYX,EAAKT,SAAS,CACZf,MAAO,wBAbE,yBAgBX,EAAKe,SAAS,CACZd,SAAS,IAjBA,6E,4CAsBf,WACE,MAAgEa,KAAKJ,MAA7Da,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,UAAWC,EAAjC,EAAiCA,WAAYxB,EAA7C,EAA6CA,QAASD,EAAtD,EAAsDA,MACtD,OACE,cAAC,GAAD,CACEuB,aAAcA,EACdC,UAAWA,EACXvB,QAASA,EACTD,MAAOA,EACPyB,WAAYA,EACZC,aAAcZ,KAAKY,aACnBC,WAAYb,KAAKa,iB,GA1DKX,IAAMC,WCI9BrD,GAAYC,IAAOC,IAAV,gDA2EAiF,GAvEK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUlD,EAAb,EAAaA,QAASmD,EAAtB,EAAsBA,YAAahD,EAAnC,EAAmCA,QAASD,EAA5C,EAA4CA,MAA5C,OAClB,qCACE,cAACE,GAAA,EAAD,UACE,yDAEDD,EACC,cAAC,EAAD,IAEA,eAAC,GAAD,WACG+C,GAAYA,EAASzD,OAAS,GAC7B,cAAC,GAAD,CAASP,MAAM,kBAAf,SACGgE,EAAS7C,KAAI,SAAC6B,GAAD,OACZ,cAAC,GAAD,CAEE1E,GAAI0E,EAAK1E,GACTyB,SAAUiD,EAAK3B,YACfrB,MAAOgD,EAAKC,cACZhD,OAAQ+C,EAAKzB,aACbrB,KACE8C,EAAKE,gBAAkBF,EAAKE,eAAe1C,UAAU,EAAG,IANrDwC,EAAK1E,SAYjBwC,GAAWA,EAAQP,OAAS,GAC3B,cAAC,GAAD,CAASP,MAAM,gBAAf,SACGc,EAAQK,KAAI,SAAC6B,GAAD,OACX,cAAC,GAAD,CAEE1E,GAAI0E,EAAK1E,GACTyB,SAAUiD,EAAK3B,YACfrB,MAAOgD,EAAKC,cACZhD,OAAQ+C,EAAKzB,aACbrB,KACE8C,EAAKE,gBAAkBF,EAAKE,eAAe1C,UAAU,EAAG,IANrDwC,EAAK1E,SAYjB2F,GAAeA,EAAY1D,OAAS,GACnC,cAAC,GAAD,CAASP,MAAM,eAAf,SACGiE,EAAY9C,KAAI,SAAC6B,GAAD,OACf,cAAC,GAAD,CAEE1E,GAAI0E,EAAK1E,GACTyB,SAAUiD,EAAK3B,YACfrB,MAAOgD,EAAKC,cACZhD,OAAQ+C,EAAKzB,aACbrB,KACE8C,EAAKE,gBAAkBF,EAAKE,eAAe1C,UAAU,EAAG,IANrDwC,EAAK1E,SAYjB0C,GAAS,cAAC,EAAD,CAASA,MAAM,UAAUzB,KAAMyB,WCnElCkD,G,4MCGbxC,MAAQ,CACNsC,SAAU,KACVlD,QAAS,KACTmD,YAAa,KACbhD,SAAS,EACTD,MAAO,M,8FAGT,sCAAAW,EAAA,+EAIchD,IAJd,uBAGuBqF,EAHvB,EAGMpC,KAAQC,QAHd,SAOclD,IAPd,uBAMuBmC,EANvB,EAMMc,KAAQC,QANd,UAUclD,IAVd,iBASuBsF,EATvB,EASMrC,KAAQC,QAEVC,KAAKC,SAAS,CACZiC,WACAlD,UACAmD,gBAdN,kDAiBInC,KAAKC,SAAS,CACZf,MAAO,+BAlBb,yBAqBIc,KAAKC,SAAS,CACZd,SAAS,IAtBf,6E,0EA2BA,WACE,MAA2Da,KAAKJ,MAAxDsC,EAAR,EAAQA,SAAUlD,EAAlB,EAAkBA,QAASmD,EAA3B,EAA2BA,YAAahD,EAAxC,EAAwCA,QAASD,EAAjD,EAAiDA,MACjD,OACE,cAAC,GAAD,CACEgD,SAAUA,EACVlD,QAASA,EACTmD,YAAaA,EACbhD,QAASA,EACTD,MAAOA,Q,GA5CWgB,IAAMC,WCC1BrD,GAAYC,IAAOC,IAAV,sHAOTqF,GAAWtF,IAAOC,IAAV,oQAMY,SAACM,GAAD,OAAWA,EAAMgF,WAQrCC,GAAUxF,IAAOC,IAAV,uHAQPwF,GAAQzF,IAAOC,IAAV,sLAEe,SAACM,GAAD,OAAWA,EAAMgF,WAOrCG,GAAO1F,IAAOC,IAAV,mEAKJc,GAAQf,IAAO2F,GAAV,kDAILC,GAAgB5F,IAAOC,IAAV,iDAIb4F,GAAO7F,IAAOM,KAAV,4BAEJwF,GAAU9F,IAAOM,KAAV,iDAIPyF,GAAY/F,IAAOgG,EAAV,uGAwEAC,GAjES,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQ9D,EAAX,EAAWA,QAAX,EAAoBD,MAApB,OACtBC,EACE,qCACE,cAACC,GAAA,EAAD,UACE,wDAEF,cAAC,EAAD,OAGF,eAAC,GAAD,WACE,cAACA,GAAA,EAAD,UACE,kCACG6D,EAAOzD,eAAiByD,EAAOzD,eAAiByD,EAAO9B,cAAe,IADzE,iBAKF,cAACkB,GAAD,CACEC,QAAO,6CAAwCW,EAAOC,iBAExD,eAACX,GAAD,WACE,cAACC,GAAD,CACEF,QACEW,EAAO1D,YAAP,6CAC0C0D,EAAO1D,aAC7ChB,EAAQ,IAA4BC,UAG5C,eAACiE,GAAD,WACE,cAAC,GAAD,UACGQ,EAAOzD,eACJyD,EAAOzD,eACPyD,EAAO9B,gBAEb,eAACwB,GAAD,WACE,cAACC,GAAD,UACGK,EAAOvD,aACJuD,EAAOvD,aAAahB,UAAU,EAAG,GACjCuE,EAAO7B,eAAe1C,UAAU,EAAG,KAEzC,cAACmE,GAAD,qBACA,eAACD,GAAD,WACGK,EAAOE,QAAUF,EAAOE,QAAUF,EAAOG,iBAAiB,GAD7D,UAGA,cAACP,GAAD,qBACA,cAACD,GAAD,UACGK,EAAOI,QACNJ,EAAOI,OAAOhE,KAAI,SAACiE,EAAOC,GAAR,OAChBA,IAAUN,EAAOI,OAAO5E,OAAS,EAC7B6E,EAAME,KADV,UAEOF,EAAME,KAFb,eAMR,cAACV,GAAD,UAAYG,EAAOQ,qBCxHdC,G,kDCGb,WAAYpG,GAAQ,IAAD,sBACjB,cAAMA,GACN,IACcqG,EACVrG,EADFsG,SAAYD,SAHG,OAMjB,EAAK/D,MAAQ,CACXqD,OAAQ,KACR/D,MAAO,KACPC,SAAS,EACTd,QAASsF,EAASE,SAAS,YAVZ,E,4FAcnB,0CAAAhE,EAAA,2DAMMG,KAAK1C,MAHKd,EAHhB,EAEIsH,MACE3H,OAAUK,GAEDuH,EALf,EAKIC,QAAWD,KAEL1F,EAAY2B,KAAKJ,MAAjBvB,QACF4F,EAAUC,SAAS1H,IACrB2H,MAAMF,GATZ,yCAUWF,EAAK,MAVhB,UAYMd,EAAS,KAZf,UAcQ5E,EAdR,kCAegC/B,EAAsB2H,GAftD,iBAeehB,EAff,EAeSnD,KAfT,yCAiBgCjD,EAAiBoH,GAjBjD,iBAiBehB,EAjBf,EAiBSnD,KAjBT,0DAoBIE,KAAKC,SAAS,CAAEf,MAAO,yBApB3B,yBAsBIc,KAAKC,SAAS,CAAEd,SAAS,EAAO8D,WAtBpC,6E,0EA0BA,WACE,MAAmCjD,KAAKJ,MAAhCqD,EAAR,EAAQA,OAAQ/D,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,QACvB,OAAO,cAAC,GAAD,CAAiB8D,OAAQA,EAAQ/D,MAAOA,EAAOC,QAASA,Q,GA3CrCe,IAAMC,WCD9BiE,GAAUrH,IAAOsH,OAAV,0SAePC,GAAOvH,IAAOwH,GAAV,gDAIJ3B,GAAO7F,IAAOyH,GAAV,2KAKJ,SAAClH,GAAD,OAAYA,EAAMmH,QAAU,UAAY,iBAIxCC,GAAQ3H,YAAO4H,IAAP5H,CAAH,qHAwBI6H,gBAjBA,SAAC,GAAD,IAAejB,EAAf,EAAGC,SAAYD,SAAf,OACb,eAACS,GAAD,WACGS,QAAQC,IAAInB,GACb,eAACW,GAAD,WACE,cAAC,GAAD,CAAMG,QAAsB,MAAbd,EAAf,SACE,cAACe,GAAD,CAAOpG,GAAG,IAAV,sBAEF,cAAC,GAAD,CAAMmG,QAAsB,QAAbd,EAAf,SACE,cAACe,GAAD,CAAOpG,GAAG,MAAV,kBAEF,cAAC,GAAD,CAAMmG,QAAsB,YAAbd,EAAf,SACE,cAACe,GAAD,CAAOpG,GAAG,UAAV,+BCrBOyG,GAhBH,kBACV,cAAC,IAAD,UACE,qCACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjC,cAAC,IAAD,CAAOH,KAAK,MAAME,UAAWE,KAC7B,cAAC,IAAD,CAAOJ,KAAK,UAAUE,UAAWG,KACjC,cAAC,IAAD,CAAOL,KAAK,aAAaE,UAAWI,KACpC,cAAC,IAAD,CAAON,KAAK,YAAYE,UAAWI,KACnC,cAAC,IAAD,CAAUC,KAAK,IAAIjH,GAAG,e,SCFfkH,GAjBMC,YAAH,iTACZC,MCQSC,OATf,WACE,OACE,qCACE,cAACC,GAAD,IACA,cAAC,GAAD,QCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7edea542.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"10923b261ba94d897ac6b81148314a3f\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: { append_to_response: \"videos\" },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: { query: encodeURIComponent(term) },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: { append_to_response: \"videos\" },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: { query: encodeURIComponent(term) },\r\n    }),\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100wh;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgb(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"assets/noPosterSmall.png\").default\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" /*aria-lable=\"rating\"*/>⭐</span>\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Section from \"Components/Section\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movie\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movie\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message error=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import { moviesApi } from \"api\";\r\nimport React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\n\r\nclass HomeContainer extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        error: \"Can't find movie information.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeContainer;\r\n","import Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Section from \"Components/Section\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  searchTerm,\r\n  handleSubmit,\r\n  error,\r\n  updateTerm,\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Nomflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Show...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message error=\"#e74c3c\" text={error} />}\r\n        {tvResults &&\r\n          movieResults &&\r\n          tvResults.length === 0 &&\r\n          movieResults.length === 0 && (\r\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\r\n          )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propsTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nclass SearchContainer extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({ movieResults, tvResults });\r\n    } catch (error) {\r\n      this.setState({\r\n        error: \"Can't find results.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        loading={loading}\r\n        error={error}\r\n        searchTerm={searchTerm}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchContainer;\r\n","import Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Section from \"Components/Section\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message error=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import { tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nclass TVContainer extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        error: \"Can't find tv information.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TVContainer;\r\n","import Loader from \"Components/Loader\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overviiew = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Nomflix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"assets/noPosterSmall.png\").default\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overviiew>{result.overview}</Overviiew>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nclass DetailContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parseId = parseInt(id);\r\n    if (isNaN(parseId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parseId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parseId));\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n\r\nexport default DetailContainer;\r\n","import { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SHeader = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0px 10px;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${(props) => (props.currunt ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Header = ({ location: { pathname } }) => (\r\n  <SHeader>\r\n    {console.log(pathname)}\r\n    <List>\r\n      <Item currunt={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item currunt={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item currunt={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </SHeader>\r\n);\r\n\r\nexport default withRouter(Header);\r\n","import {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Home from \"Route/Home\";\r\nimport Search from \"Route/Search\";\r\nimport TV from \"Route/TV\";\r\nimport Detail from \"Route/Detail\";\r\nimport Header from \"./Header\";\r\n\r\nconst Rtr = () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n\r\nexport default Rtr;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a {\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n    body {\r\n        font-size: 12px;\r\n        background-color: rgba(20, 20, 20, 1);\r\n        color: white;\r\n        padding-top: 50px;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}